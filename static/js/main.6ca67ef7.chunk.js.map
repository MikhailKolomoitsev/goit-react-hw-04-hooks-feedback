{"version":3,"sources":["components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.js","index.js","components/Feedback/FeedbackOptions/FeedbackOptions.module.css","components/Feedback/Feedback.module.css","components/Feedback/Statistics/Statistics.module.css","components/Feedback/Notification/Notification.module.css"],"names":["FeedbackOptions","option","onLeaveFeedback","id","name","className","controls","type","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","styles","stats","Notification","message","notificationBox","shortid","require","Feedback","useState","setGood","setNeutral","setBad","feedback","generate","result","Math","floor","countPositiveFeedbackPercentage","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iSA2BeA,EAvBS,SAAC,GAAD,EAAGC,OAAH,IAAWC,EAAX,EAAWA,gBAAiBC,EAA5B,EAA4BA,GAAIC,EAAhC,EAAgCA,KAAhC,OACtB,qBAAKC,UAAWC,WAAhB,SAEI,wBACEC,KAAK,SACLF,UAAWG,SACXJ,KAAMA,EACNK,QAASP,EAJX,SAOGE,GAFID,M,gBCwBEO,EA/BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,4CACA,qBAAIV,UAAWW,IAAOC,MAAtB,UACE,qBAAIZ,UAAU,OAAd,mBACSM,IADgB,KAGzB,qBAAIN,UAAU,OAAd,sBACYO,IADa,KAGzB,qBAAIP,UAAU,OAAd,kBACQQ,IADiB,KAGzB,qBAAIR,UAAU,OAAd,oBACUS,IADe,KAGzB,qBAAIT,UAAU,OAAd,gCACsBU,EADtB,MAAyB,Y,gBCJhBG,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKd,UAAWW,IAAOI,gBAAvB,SACE,4BAAID,OCFJE,EAAUC,EAAQ,IAET,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAyBE,OACE,sBAAKtB,UAAWW,IAAOY,SAAvB,UACE,2DACA,cAAC,EAAD,CACExB,KAAM,OACND,GAAIkB,EAAQQ,WACZ5B,OAAQU,EACRT,gBA9BW,WACrBuB,EAAQd,EAAK,MA+BL,cAAC,EAAD,CACEP,KAAM,UACND,GAAIkB,EAAQQ,WACZ5B,OAAQW,EACRV,gBAhCgB,WAC1BwB,EAAWd,EAAQ,MAiCX,cAAC,EAAD,CACER,KAAM,MACND,GAAIkB,EAAQQ,WACZ5B,OAAQY,EACRX,gBAnCY,WACtByB,EAAOd,EAAI,MAGGF,EAAOC,EAAUC,IAkCG,EACxB,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOH,EAAOC,EAAUC,EACxBE,mBApC8B,WACtC,IAAIe,EAAiB,IAAPnB,GAAeA,EAAOC,EAAUC,GAI9C,OAHKiB,IACHA,EAAS,GAEJC,KAAKC,MAAe,IAATF,GAAgB,IA+BNG,KAGtB,cAAC,EAAD,CAAcd,QAAQ,yBCxDjBe,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAACkB,EAAD,OCDNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,oC,kBCA7BD,EAAOC,QAAU,CAAC,SAAW,6B,kBCA7BD,EAAOC,QAAU,CAAC,MAAQ,4B,kBCA1BD,EAAOC,QAAU,CAAC,gBAAkB,yC","file":"static/js/main.6ca67ef7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { controls, button } from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ option, onLeaveFeedback, id, name }) => (\n  <div className={controls}>\n    \n      <button\n        type=\"button\"\n        className={button}\n        name={name}\n        onClick={onLeaveFeedback}\n        key={id}\n      >\n        {name}\n      </button>\n  </div>\n);\n\n// eslint-disable-next-line react/no-typos\nFeedbackOptions.propTypes  = {\n  option: PropTypes.number.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nexport default FeedbackOptions;\n","/* eslint-disable react/no-typos */\nimport React from \"react\";\nimport styles from \"./Statistics.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <h2>Statistics</h2>\n    <ul className={styles.stats}>\n      <li className=\"stat\" key=\"1\">\n        Good: {good}\n      </li>\n      <li className=\"stat\" key=\"2\">\n        Neutral: {neutral}\n      </li>\n      <li className=\"stat\" key=\"3\">\n        Bad: {bad}\n      </li>\n      <li className=\"stat\" key=\"4\">\n        total: {total}\n      </li>\n      <li className=\"stat\" key=\"5\">\n        Positive feedback: {positivePercentage}%\n      </li>\n    </ul>\n  </div>\n);\n\nStatistics.propTypes  = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","/* eslint-disable react/no-typos */\nimport React from \"react\";\nimport styles from \"./Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return (\n    <div className={styles.notificationBox}>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nNotification.propTypes  = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","// import PropTypes from \"prop-types\";\nimport styles from \"./Feedback.module.css\";\nimport React, { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nconst shortid = require('shortid');\n\nexport default function Feedback(){\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\nsetGood(good+1)\n  };\n\n    const handleNeutral = () => {\nsetNeutral(neutral+1)\n    };\n    const handleBad = () => {\nsetBad(bad+1)\n  };\n const countTotalFeedback=()=> {\n    let sum = good + neutral + bad;\n    return sum;\n  }\n\n  const countPositiveFeedbackPercentage = () => {\n    let result = (good * 100) / (good + neutral + bad);\n    if (!result) {\n      result = 0;\n    }\n    return Math.floor(result * 100) / 100;\n  }\n\n    return (\n      <div className={styles.feedback}>\n        <h2>Please, leave us feedback</h2>\n        <FeedbackOptions\n          name={'good'}\n          id={shortid.generate()}\n          option={good}\n          onLeaveFeedback={handleGood}\n        />\n        <FeedbackOptions\n          name={'neutral'}\n          id={shortid.generate()}\n          option={neutral}\n          onLeaveFeedback={handleNeutral}\n        />\n        <FeedbackOptions\n          name={'bad'}\n          id={shortid.generate()}\n          option={bad}\n          onLeaveFeedback={handleBad}\n        />\n\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={good + neutral + bad}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n}\n\n\n","import \"./App.css\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"FeedbackOptions_controls__37Vah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__3ivOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__1BaaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationBox\":\"Notification_notificationBox__24xUU\"};"],"sourceRoot":""}